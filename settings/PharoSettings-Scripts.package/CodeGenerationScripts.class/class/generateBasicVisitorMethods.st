generation
generateBasicVisitorMethods
	<script>
	self open: '| toVisit visitor |
	toVisit := SQLObject.
	visitor := SQLVisitor.
	toVisit
		withAllSubclassesDo: [ :class | 
			| selector |
			selector := #accept:.
			((class includesSelector: selector) not or: [ class >> selector hasPragmaNamed: ''manualGeneration'' ])
				ifTrue: [ class
						compile:
							''accept: aVisitor
	"Generated by SQLVisitor class>>#generateBasicVisitMethods"
	<manualGeneration>
					
	^ aVisitor visit'' , (class name withoutPrefix: ''SQL'') , '': self''
						classified: ''visiting'' ].

			selector := (''visit'' , (class name withoutPrefix: ''SQL'') , '':'') asSymbol.
			((visitor includesSelector: selector) not or: [ visitor >> selector hasPragmaNamed: ''manualGeneration'' ])
				ifTrue: [ visitor
						compile:
							''visit'' , (class name withoutPrefix: ''SQL'') , '': aSQL'' , (class name withoutPrefix: ''SQL'')
								,
									''
	"Generated by SQLVisitor class>>#generateBasicVisitMethods"
	<manualGeneration>

	^ self subclassResponsibility''
						classified: ''visiting'' ] ]'